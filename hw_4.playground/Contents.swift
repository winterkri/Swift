// ДЗ 4 - Массивы
// посчитать количество денег и вывести в консоль.
let money = [30, 5, 100, 47, 47, 3]
var sum = 0 // переменная для хранения суммы

for i in money {
  sum = sum + i
  print("Количество денег: \(sum) долларов")
}

// найти в этом массиве имя “Tim”, и вывести его на консоль.
let names = ["Bill" , "Tim", "Tom", "Sem"]

for i in names {
    i == "Tim" ? print("Имя \(i) есть в массиве") : print("Данного имени нет в массиве")} //использование тернарного оператора


//создать массив "дни в месяцах", в котором к каждому месяцу, который соответствует индексу в массиве (0 - январь), будет соответствовать количество дней в этом месяце

let days = [31, 28 , 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
let months = ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"]

print("Количество дней в апреле: \(days[3])")

// Используя цикл for и этот массив

// Вывести количество дней в каждом месяце (без имен месяцев)

for i in days {
print("Количество дней: \(i)")
}

// Используй еще один массив с именами месяцев чтобы вывести название месяца + количество дней

for (day, month) in zip(days, months) { // можно использовать функцию zip для объединения массивов
print("В месяце \(month) \(day) день")
}

// можно без функции zip

for i in 0..<days.count { // проходим по каждому индексу в массиве с днями. days.count возвращает количество элементов в массиве days
    var day = days[i]
    var month = months[i] // используем текущее значение i для доступа к элементу в массиве с месяцами с тем же индексом и сохраняем в переменную
    print("В месяце \(month) - \(day) день")
}

// Сделай тоже самое, но используя массив тюплов с параметрами (имя месяца, кол-во дней)

// Вариант решения 1:
let tupleMonthDay = [
    ("Январь", 31),
    ("Февраль", 28),
    ("Март", 31),
    ("Апрель", 30),
    ("Май", 31),
    ("Июнь", 30),
    ("Июль", 31),
    ("Август", 31),
    ("Сентябрь", 30),
    ("Октябрь", 31),
    ("Ноябрь", 30),
    ("Декабрь", 31)
]

for i in tupleMonthDay {
    print("В месяце \(i.1) - \(i.0) день")
}

// Вариант решения 2:

var tupleDayMounth: [(day: Int, month: String)] = [] //создаем пустой массив тюплов

for i in 0..<days.count {
    tupleDayMounth.append((day: days[i], month: months[i])) //с помощью индекса обращаемся к элементам массивов days и months, создаем и добавляем
                                                            // тюплы в пустой массив tupleDayMounth
}

for i in 0..<days.count {
    print("В месяце \(tupleDayMounth[i].1) - \(tupleDayMounth[i].0) день")
}

// Сделай тоже самое, только выводи дни в обратном порядке (порядок в массиве не меняется)
for i in (0..<tupleMonthDay.count).reversed() {
    let day = tupleMonthDay[i].1
    print("В месяце \(tupleMonthDay[i].0) - \(day) день")
}

// Для произвольно выбранной даты (месяц и день) посчитайте количество дней до этой даты от начала года

func star(month: String, day: Int) -> Int? {
    let tupleMonthDay = [
        ("Январь", 31),
        ("Февраль", 28),
        ("Март", 31),
        ("Апрель", 30),
        ("Май", 31),
        ("Июнь", 30),
        ("Июль", 31),
        ("Август", 31),
        ("Сентябрь", 30),
        ("Октябрь", 31),
        ("Ноябрь", 30),
        ("Декабрь", 31)
    ]
    var countDays = 0 //переменная для подсчета количества дней
    
    for data in tupleMonthDay {
        if data.0 == month { //если введенный месяц = месяцу в тюпле, то проверяем день
            if day > 0 && day <= data.1 { // если день больше 0 и <= количеству дней из тюпла tupleMonthDay в текущем месяце, то
                return countDays + day //возвращаем общее кол-во дней до указанной даты
            } else {
                return nil // если день не корректен
            }
        }
        countDays = countDays + data.1 // на каждой итерации countDays увеличиваем на количество дней в текущем месяце
       //print(countDays)
    }
    return nil // месяц не найден в тюпле
}

if let countDays = star(month: "Август", day: 20) {
    print("До 1 января прошло \(countDays) с начала года")
} else {
    print("Невалидные данные")
}
